#include"fstream"
#include"cstring"
#include "MusicGameScene.h"
#include "SimpleAudioEngine.h"
#include "keyedit.h"
#include "MusicLine.h"
#include"MenuScene.h"
USING_NS_CC;
int keyedit::specialAmount = 0;
int keyedit::keyAmount = 0;


std::vector<std::string>split(std::string str,std::string pattern)
{
	std::string::size_type pos;
	std::vector<std::string> result;
	str+=pattern;//扩展字符串以方便操作
	int size=str.size();
	for(int i=0; i<size; i++)
	{
		pos=str.find(pattern,i);
		if(pos<size)
		{
			std::string s=str.substr(i,pos-i);
			result.push_back(s);
			i=pos+pattern.size()-1;
		}
	}
	return result;
}

void MusicGame::GetData()
{
	getdata();
	/*
	std::string lineValue;
	// declare timeFile stream: 	
	std::ifstream timeFile("time.txt");
	int keyRowNum = 0;
	
	while(timeFile.good())
	{
		getline(timeFile,lineValue); // read a string until next col:
		//		if(!timeFile.good()) break;
		std::string MusicLine = lineValue;
		vector<std::string> Value = split(MusicLine,",");
		KeyTime[keyRowNum] = atol(Value[0].c_str());

		keyRowNum++;
	}
	overTag = -10;
	KeyTime[keyRowNum] = overTag;
	int timeAmount = keyRowNum;

	timeFile.close();
	keyRowNum = 0;
	std::ifstream moveFile("move.txt");
	while(moveFile.good())
	{ 
		getline(moveFile,lineValue); // read a string until next col:
		std::string MusicLine = lineValue;
		vector<std::string> Value = split(MusicLine,",");
		specialKeyMoveToCCP[keyRowNum] =ccp(atoi(Value[1].c_str()),atoi(Value[2].c_str()));
		keyRowNum++;
	}
	moveFile.close();
	int moveAmount = keyRowNum;
	keyRowNum = 0;
	std::ifstream PositionFile("position.txt");
	while(PositionFile.good())
	{ 
		getline(PositionFile,lineValue); // read a string until next col:
		std::string MusicLine = lineValue;
		vector<std::string> Value = split(MusicLine,",");
		KeyPositionX[keyRowNum] = atoi(Value[1].c_str());
		KeyPositionY[keyRowNum] = atoi(Value[2].c_str());
		if(Value.size()>=4)
		{
			if(Value[3] =="true")
			{
				isSpecialKey[keyRowNum] = true;

			}
		}
		else
		{
			isSpecialKey[keyRowNum] = false;
		}
		keyRowNum++;
	}
	int positionAmount = keyRowNum;
	KeyPositionX[keyRowNum] = overTag;
	KeyPositionY[keyRowNum] = overTag;
	PositionFile.close();

	std::ofstream dataFile("data.txt",ios::out);
	for(int i = 0;i<timeAmount;i++)
	{
		char *str1 = "KeyTime[";
		dataFile<<str1<<i;
		char *str2 = "] = ";
		dataFile<<str2<<KeyTime[i]<<";"<<endl;
	}
	for(int i = 0;i<positionAmount;i++)
	{
		char *str1 = "KeyPositionX[";
		dataFile<<str1<<i;
		char *str2 = "] = ";
		dataFile<<str2<<KeyPositionX[i]<<";"<<endl;
		char *str3 = "KeyPositionY[";
		dataFile<<str3<<i;
		char *str4 = "] = ";
		dataFile<<str4<<KeyPositionY[i]<<";"<<endl;
		char *str5 = "isSpecialKey[";
		dataFile<<str5<<i;
		char *str6 = "] = ";
		dataFile<<str6<<isSpecialKey[i]<<";"<<endl;
	}
	for(int i = 0;i<moveAmount;i++)
	{
		char *str1 = "specialKeyMoveToCCP[";
		dataFile<<str1<<i;
		char *str2 = "] =ccp(";
		dataFile<<str2<<specialKeyMoveToCCP[i].x<<","<<specialKeyMoveToCCP[i].y<<");"<<endl;
	}
	dataFile.close();
	*/

}
CCScene* MusicGame::scene()
{
	// 'scene' is an autorelease object
	CCScene *scene = CCScene::create();
	
	// 'layer' is an autorelease objectv bn0 
	MusicGame *layer = MusicGame::create();

	// add layer as a child to scene
	scene->addChild(layer);

	// return the scene
	return scene;
}

long MusicGame::getCurrentTime()    
{     
	struct cc_timeval tv;     
	CCTime::gettimeofdayCocos2d(&tv, NULL);  
	return tv.tv_sec * 1000 + tv.tv_usec / 1000;     
}  

   
 


// on "init" you need to initialize your instance
bool MusicGame::init()
{
	//////////////////////////////
	// 1. super init first
	if ( !CCLayer::init() )
	{
		return false;
	}
		GetData();
	//加一个label
	/*
	LabelScore = CCLabelTTF::create("score","arial",30);
	LabelScore->setColor(ccBLACK);
	LabelScore->retain();
	LabelScore->setPosition(ccp(340, 300) );
	this->addChild(LabelScore, 1);
	*/
	keyedit::keyAmount = 0;
	keyedit::specialAmount = 0;


	this->schedule(schedule_selector(MusicGame::newUpdate),0.001); 
	currentScore = 0;
	CCSize visibleSize = CCDirector::sharedDirector()->getVisibleSize();
	CCPoint origin = CCDirector::sharedDirector()->getVisibleOrigin();
	LabelScore = CCLabelTTF::create("0","arial",30);
	LabelScore->setColor(ccBLACK);
	LabelScore->retain();
	LabelScore->setPosition(ccp(visibleSize.width + origin.x-30, visibleSize.height + origin.y-30));
	this->addChild(LabelScore, 1);
	/////////////////////////////
	// 2. add a menu item with "X" image, which is clicked to quit the program
	//    you may modify it.

	// add a "close" icon to exit the progress. it's an autorelease object
	CCMenuItemImage *pCloseItem = CCMenuItemImage::create(
										"CloseNormal.png",
										"CloseSelected.png",
										this,
										menu_selector(MusicGame::menuCloseCallback));
	CCMenuItemImage *pBackToMenuI = CCMenuItemImage::create(
									"BackToMenu.png",
									"BackToMenu~.png",
									this,
									menu_selector(MusicGame::menuChangeScene));
	pBackToMenuI->setPosition(ccp(origin.x + visibleSize.width - pBackToMenuI->getContentSize().width/2  ,50));
	pCloseItem->setPosition(ccp(origin.x + visibleSize.width - pCloseItem->getContentSize().width/2 ,
								origin.y + pCloseItem->getContentSize().height/2));

	// create menu, it's an autorelease object
	CCMenu* pMenu = CCMenu::create(pCloseItem,pBackToMenuI, NULL);
	pMenu->setPosition(CCPointZero);
	this->addChild(pMenu, 1);

	setTouchEnabled(true);
	CCSprite* pSprite = CCSprite::create("00.png");

	// position the sprite on the center of the screen
	pSprite->setPosition(ccp(visibleSize.width/2 + origin.x, visibleSize.height/2 + origin.y));

	// add the sprite as a child to this layer
	this->addChild(pSprite, 0);

	//m_pSprite->setPosition(ccp(visibleSize.width/2+origin.x,visibleSize.height/2+origin.y));
	//this->addChild(m_pSprite,1);

	this->SceneBeginTime = this->getCurrentTime();
	CocosDenshion::SimpleAudioEngine::sharedEngine()->playBackgroundMusic("weifengtangtang.mp3",false);
	
	return true;
}

void MusicGame::createSpecialKey(int positionX,int positionY,CCPoint moveTo)
{
	//划线
	CCPoint OriginPoint= ccp(positionX,positionY);
	MusicLine *newLine = MusicLine::create(OriginPoint,moveTo);
	addChild(newLine,1);
	m_pLineList.push_back(newLine);
		//为按键精灵添加动作
	CCSize screenSize=CCDirector::sharedDirector()->getVisibleSize();
	long createTime = getCurrentTime();
	//将当前创建的时间记录到指针对象里
	keyedit *SpecialKey1 = new keyedit(createTime,positionX,positionY,true);
	
	this->addChild(SpecialKey1,1);

	SpecialKey1->keyRunAnimation(moveTo);
	this->m_pSpriteList.push_back(SpecialKey1);

}


void MusicGame::createmykey(int positionX,int positionY)
{	

	//为按键精灵添加动作
	CCSize screenSize=CCDirector::sharedDirector()->getVisibleSize();
	long createTime = getCurrentTime();
	//将当前创建的时间记录到指针对象里
	keyedit *mykey = new keyedit(createTime,positionX,positionY);
	
	this->addChild(mykey,1);
	mykey->keyRunAnimation();
	this->m_pSpriteList.push_back(mykey);
}



bool isTouchGetNode(CCSprite *sprite,CCTouch* touch)
{
	CCPoint touchPoint = touch->getLocationInView();     
	touchPoint = CCDirector::sharedDirector()->convertToGL(touchPoint );         
	CCRect rc1 = sprite->boundingBox(); 
	if(rc1.containsPoint(touchPoint)) return true;
	else return false;
}


void MusicGame::ccTouchesBegan(CCSet *pTouches,CCEvent *pEvent)
{
	//获取鼠标位置
	CCTouch *touch = (CCTouch*)pTouches->anyObject();
	//CocosDenshion::SimpleAudioEngine::sharedEngine()->playEffect("pew-pew-lei.wav");
	CCPoint locInView= touch->getLocationInView();
	//坐标系的转化
	CCPoint loc =CCDirector::sharedDirector()->convertToGL(locInView);

	//精灵的动作

	for(vector<keyedit*>::iterator it=this->m_pSpriteList.begin();it!=m_pSpriteList.end();it++){
		if(isTouchGetNode(*it,touch)&&!(*it)->isSpecialKey){
			(*it)->endTime = getCurrentTime();
			(*it)->Change();
			(*it)->isClick = true;
			currentScore+=5;
			break;
		}
	}
}
void MusicGame::ccTouchesMoved(CCSet *pTouches,CCEvent *pEvent)
{
	CCTouch *touch = (CCTouch*)pTouches->anyObject();
	for(vector<keyedit*>::iterator it=this->m_pSpriteList.begin();it!=m_pSpriteList.end();it++)
	{
		if(isTouchGetNode(*it,touch)&&(*it)->isSpecialKey)
		{
			long currentTime = getCurrentTime();
			int diffTime = (*it)->specialKeyBeginTime - currentTime;
			int beginTime = 500;
			//判断一开始触摸的时候是不是晚了
			if(diffTime>-beginTime&&diffTime<beginTime)
			{
				(*it)->isTouchGetSpecialKey = true;
			}
			(*it)->specialKeyDuration = currentTime-(*it)->createTime;
		}
	}
}


void MusicGame::newUpdate(float dt)
{	

	long currentTime = this->getCurrentTime();
	int frequency = 300;
	//计算出离当前音乐的时间
	long musicCurrentTime  = currentTime-this->SceneBeginTime;
	long KeyCreateTime = KeyTime[keyedit::keyAmount];
	int diffTime = KeyCreateTime-musicCurrentTime;
	if(KeyPositionX[keyedit::keyAmount]!=overTag&&KeyCreateTime!=overTag)
	{
		if(diffTime<frequency&&diffTime>-frequency)
		{
			if(isSpecialKey[keyedit::keyAmount]==false)
			{
				this->createmykey(KeyPositionX[keyedit::keyAmount],KeyPositionY[keyedit::keyAmount]);
			}
			else
			{
				this->createSpecialKey(KeyPositionX[keyedit::keyAmount],KeyPositionY[keyedit::keyAmount],specialKeyMoveToCCP[keyedit::specialAmount]);
			}
		}
	}
	char str[100] = {'0'};
	sprintf(str, "%d",currentScore);
	LabelScore->setString(str);
	LabelScore->setVisible(true);
	for(vector<MusicLine*>::iterator it=this->m_pLineList.begin();it!=m_pLineList.end();it++)
	{
		if(currentTime - (*it)->createTime>1000)
		{

			(*it)->removeFromParentAndCleanup(true);

			delete *it;
			this->m_pLineList.erase(it);
			break;
		}
	}
	for(vector<keyedit*>::iterator it=this->m_pSpriteList.begin();it!=m_pSpriteList.end();it++){
		//deal with normalKeys
		if(currentTime - (*it)->createTime>1000)
		{
			if(!(*it)->isSpecialKey)
			{
				if(!(*it)->isClick)
				{
					currentScore -= 10;
				}
				else
				{
					currentScore += 5;
				}
				(*it)->endTime = getCurrentTime();
				(*it)->removeFromParentAndCleanup(true);
				delete *it;
				this->m_pSpriteList.erase(it);
				break;
			}
		}
		//deal with specialKeys
		if(currentTime - (*it)->createTime>1500)
		{		
			if((*it)->isSpecialKey)
			{
				//对specialkey处理，加减分依据，是否拖动以及拖动持续时间，
				if((*it)->isTouchGetSpecialKey&&(*it)->specialKeyDuration>400)
				{
					currentScore += 50;
				}
				else
				{
					currentScore -= 10;
				}
			}
			(*it)->endTime = getCurrentTime();
			(*it)->removeFromParentAndCleanup(true);
			delete *it;
			this->m_pSpriteList.erase(it);
			break;
		}
	}

}
void MusicGame::menuChangeScene(CCObject* pSender)
{
	if(currentScore>1000)
	{
		MenuScene::setMenuRed(true);
	}
	CocosDenshion::SimpleAudioEngine::sharedEngine()->pauseBackgroundMusic();//暂停背景音乐
	CCScene* scene = MenuScene::scene();

	/*设置登录场景切换动画*/
	CCTransitionScene* MenuScene = CCTransitionPageTurn::create(2,scene,false);//替换场景
	CCDirector::sharedDirector()->replaceScene(MenuScene);
}
void MusicGame::menuCloseCallback(CCObject* pSender)
{
	CocosDenshion::SimpleAudioEngine::sharedEngine()->pauseBackgroundMusic();//暂停背景音乐
#if (CC_TARGET_PLATFORM == CC_PLATFORM_WINRT) || (CC_TARGET_PLATFORM == CC_PLATFORM_WP8)
	CCMessageBox("You pressed the close button. Windows Store Apps do not implement a close button.","Alert");
#else
	CCDirector::sharedDirector()->end();
#if (CC_TARGET_PLATFORM == CC_PLATFORM_IOS)
	exit(0);
#endif
#endif
}
void MusicGame::getdata()
{
	KeyTime[0] = 1947;
	KeyTime[1] = 3418;
	KeyTime[2] = 3766;
	KeyTime[3] = 4138;
	KeyTime[4] = 4575;
	KeyTime[5] = 5007;
	KeyTime[6] = 5467;
	KeyTime[7] = 5908;
	KeyTime[8] = 6383;
	KeyTime[9] = 6837;
	KeyTime[10] = 7365;
	KeyTime[11] = 7805;
	KeyTime[12] = 8250;
	KeyTime[13] = 8677;
	KeyTime[14] = 9138;
	KeyTime[15] = 9667;
	KeyTime[16] = 10104;
	KeyTime[17] = 10512;
	KeyTime[18] = 11667;
	KeyTime[19] = 12586;
	KeyTime[20] = 13509;
	KeyTime[21] = 14386;
	KeyTime[22] = 15371;
	KeyTime[23] = 16300;
	KeyTime[24] = 17224;
	KeyTime[25] = 17806;
	KeyTime[26] = 18258;
	KeyTime[27] = 18633;
	KeyTime[28] = 19062;
	KeyTime[29] = 19500;
	KeyTime[30] = 19928;
	KeyTime[31] = 20405;
	KeyTime[32] = 20844;
	KeyTime[33] = 21331;
	KeyTime[34] = 21847;
	KeyTime[35] = 22281;
	KeyTime[36] = 22753;
	KeyTime[37] = 23174;
	KeyTime[38] = 23631;
	KeyTime[39] = 24091;
	KeyTime[40] = 24527;
	KeyTime[41] = 24982;
	KeyTime[42] = 25173;
	KeyTime[43] = 25341;
	KeyTime[44] = 25494;
	KeyTime[45] = 25639;
	KeyTime[46] = 25781;
	KeyTime[47] = 26010;
	KeyTime[48] = 26195;
	KeyTime[49] = 26412;
	KeyTime[50] = 26634;
	KeyTime[51] = 26985;
	KeyTime[52] = 27165;
	KeyTime[53] = 27325;
	KeyTime[54] = 27505;
	KeyTime[55] = 27689;
	KeyTime[56] = 27935;
	KeyTime[57] = 28228;
	KeyTime[58] = 28462;
	KeyTime[59] = 28840;
	KeyTime[60] = 29039;
	KeyTime[61] = 29222;
	KeyTime[62] = 29385;
	KeyTime[63] = 29553;
	KeyTime[64] = 29761;
	KeyTime[65] = 30024;
	KeyTime[66] = 30266;
	KeyTime[67] = 30508;
	KeyTime[68] = 30731;
	KeyTime[69] = 30927;
	KeyTime[70] = 31130;
	KeyTime[71] = 31364;
	KeyTime[72] = 31562;
	KeyTime[73] = 31910;
	KeyTime[74] = 32360;
	KeyTime[75] = 32561;
	KeyTime[76] = 32725;
	KeyTime[77] = 32873;
	KeyTime[78] = 33014;
	KeyTime[79] = 33209;
	KeyTime[80] = 33432;
	KeyTime[81] = 33643;
	KeyTime[82] = 33859;
	KeyTime[83] = 34060;
	KeyTime[84] = 34432;
	KeyTime[85] = 34618;
	KeyTime[86] = 34788;
	KeyTime[87] = 34954;
	KeyTime[88] = 35126;
	KeyTime[89] = 35306;
	KeyTime[90] = 35503;
	KeyTime[91] = 35703;
	KeyTime[92] = 35911;
	KeyTime[93] = 36303;
	KeyTime[94] = 36481;
	KeyTime[95] = 36660;
	KeyTime[96] = 36831;
	KeyTime[97] = 37020;
	KeyTime[98] = 37224;
	KeyTime[99] = 37433;
	KeyTime[100] = 37626;
	KeyTime[101] = 37827;
	KeyTime[102] = 38024;
	KeyTime[103] = 38221;
	KeyTime[104] = 38428;
	KeyTime[105] = 38624;
	KeyTime[106] = 38850;
	KeyTime[107] = 39065;
	KeyTime[108] = 39294;
	KeyTime[109] = 39507;
	KeyTime[110] = 39719;
	KeyTime[111] = 40189;
	KeyTime[112] = 40656;
	KeyTime[113] = 41079;
	KeyTime[114] = 41287;
	KeyTime[115] = 41482;
	KeyTime[116] = 41693;
	KeyTime[117] = 41883;
	KeyTime[118] = 42091;
	KeyTime[119] = 42302;
	KeyTime[120] = 42510;
	KeyTime[121] = 42735;
	KeyTime[122] = 42949;
	KeyTime[123] = 43157;
	KeyTime[124] = 43564;
	KeyTime[125] = 44037;
	KeyTime[126] = 44424;
	KeyTime[127] = 44636;
	KeyTime[128] = 44843;
	KeyTime[129] = 45071;
	KeyTime[130] = 45299;
	KeyTime[131] = 45537;
	KeyTime[132] = 45742;
	KeyTime[133] = 46028;
	KeyTime[134] = 46513;
	KeyTime[135] = 46678;
	KeyTime[136] = 46857;
	KeyTime[137] = 47039;
	KeyTime[138] = 47246;
	KeyTime[139] = 47475;
	KeyTime[140] = 47659;
	KeyTime[141] = 47852;
	KeyTime[142] = 48048;
	KeyTime[143] = 48271;
	KeyTime[144] = 48480;
	KeyTime[145] = 48657;
	KeyTime[146] = 48827;
	KeyTime[147] = 49009;
	KeyTime[148] = 49209;
	KeyTime[149] = 49413;
	KeyTime[150] = 49623;
	KeyTime[151] = 49835;
	KeyTime[152] = 50045;
	KeyTime[153] = 50273;
	KeyTime[154] = 50461;
	KeyTime[155] = 50640;
	KeyTime[156] = 50810;
	KeyTime[157] = 51002;
	KeyTime[158] = 51206;
	KeyTime[159] = 51409;
	KeyTime[160] = 51626;
	KeyTime[161] = 51838;
	KeyTime[162] = 52106;
	KeyTime[163] = 52286;
	KeyTime[164] = 52463;
	KeyTime[165] = 52636;
	KeyTime[166] = 52818;
	KeyTime[167] = 53076;
	KeyTime[168] = 53285;
	KeyTime[169] = 53496;
	KeyTime[170] = 53697;
	KeyTime[171] = 53911;
	KeyTime[172] = 54095;
	KeyTime[173] = 54256;
	KeyTime[174] = 54410;
	KeyTime[175] = 54606;
	KeyTime[176] = 54803;
	KeyTime[177] = 55013;
	KeyTime[178] = 55210;
	KeyTime[179] = 55426;
	KeyTime[180] = 55619;
	KeyTime[181] = 55872;
	KeyTime[182] = 56050;
	KeyTime[183] = 56211;
	KeyTime[184] = 56388;
	KeyTime[185] = 56586;
	KeyTime[186] = 56790;
	KeyTime[187] = 56998;
	KeyTime[188] = 57207;
	KeyTime[189] = 57417;
	KeyTime[190] = 57660;
	KeyTime[191] = 57853;
	KeyTime[192] = 58027;
	KeyTime[193] = 58184;
	KeyTime[194] = 58348;
	KeyTime[195] = 58602;
	KeyTime[196] = 58792;
	KeyTime[197] = 58994;
	KeyTime[198] = 59213;
	KeyTime[199] = 59444;
	KeyTime[200] = 59624;
	KeyTime[201] = 59779;
	KeyTime[202] = 59930;
	KeyTime[203] = 60123;
	KeyTime[204] = 60360;
	KeyTime[205] = 60578;
	KeyTime[206] = 60793;
	KeyTime[207] = 61067;
	KeyTime[208] = 61302;
	KeyTime[209] = 61585;
	KeyTime[210] = 61795;
	KeyTime[211] = 62008;
	KeyTime[212] = 62449;
	KeyTime[213] = 62683;
	KeyTime[214] = 63251;
	KeyTime[215] = 64238;
	KeyTime[216] = 65075;
	KeyTime[217] = 65682;
	KeyTime[218] = 66150;
	KeyTime[219] = 66627;
	KeyTime[220] = 67093;
	KeyTime[221] = 67598;
	KeyTime[222] = 68143;
	KeyTime[223] = 68743;
	KeyTime[224] = 69216;
	KeyTime[225] = 69657;
	KeyTime[226] = 69848;
	KeyTime[227] = 70031;
	KeyTime[228] = 70246;
	KeyTime[229] = 70463;
	KeyTime[230] = 70680;
	KeyTime[231] = 70885;
	KeyTime[232] = 71342;
	KeyTime[233] = 71530;
	KeyTime[234] = 71720;
	KeyTime[235] = 71913;
	KeyTime[236] = 72111;
	KeyTime[237] = 72339;
	KeyTime[238] = 72576;
	KeyTime[239] = 72795;
	KeyTime[240] = 73193;
	KeyTime[241] = 73387;
	KeyTime[242] = 73582;
	KeyTime[243] = 73783;
	KeyTime[244] = 73997;
	KeyTime[245] = 74208;
	KeyTime[246] = 74435;
	KeyTime[247] = 74669;
	KeyTime[248] = 74896;
	KeyTime[249] = 75107;
	KeyTime[250] = 75354;
	KeyTime[251] = 75571;
	KeyTime[252] = 75843;
	KeyTime[253] = 76265;
	KeyTime[254] = 76708;
	KeyTime[255] = 76944;
	KeyTime[256] = 77193;
	KeyTime[257] = 77436;
	KeyTime[258] = 77657;
	KeyTime[259] = 78030;
	KeyTime[260] = 78247;
	KeyTime[261] = 78436;
	KeyTime[262] = 78642;
	KeyTime[263] = 78870;
	KeyTime[264] = 79132;
	KeyTime[265] = 79319;
	KeyTime[266] = 79536;
	KeyTime[267] = 79927;
	KeyTime[268] = 80160;
	KeyTime[269] = 80397;
	KeyTime[270] = 80812;
	KeyTime[271] = 81046;
	KeyTime[272] = 81270;
	KeyTime[273] = 81505;
	KeyTime[274] = 81765;
	KeyTime[275] = 81991;
	KeyTime[276] = 82234;
	KeyTime[277] = 82463;
	KeyTime[278] = 82697;
	KeyTime[279] = 82935;
	KeyTime[280] = 83143;
	KeyTime[281] = 83370;
	KeyTime[282] = 83610;
	KeyTime[283] = 83860;
	KeyTime[284] = 84127;
	KeyTime[285] = 84368;
	KeyTime[286] = 84645;
	KeyTime[287] = 85062;
	KeyTime[288] = 85511;
	KeyTime[289] = 85988;
	KeyTime[290] = 86189;
	KeyTime[291] = 86426;
	KeyTime[292] = 86681;
	KeyTime[293] = 86935;
	KeyTime[294] = 87188;
	KeyTime[295] = 87439;
	KeyTime[296] = 87914;
	KeyTime[297] = 88351;
	KeyTime[298] = 88737;
	KeyTime[299] = 89096;
	KeyTime[300] = 89498;
	KeyTime[301] = 89754;
	KeyTime[302] = 89988;
	KeyTime[303] = 90203;
	KeyTime[304] = 90430;
	KeyTime[305] = 90656;
	KeyTime[306] = 90896;
	KeyTime[307] = 91094;
	KeyTime[308] = 91398;
	KeyTime[309] = 91614;
	KeyTime[310] = 91814;
	KeyTime[311] = 92019;
	KeyTime[312] = 92218;
	KeyTime[313] = 92420;
	KeyTime[314] = 92681;
	KeyTime[315] = 92869;
	KeyTime[316] = 93054;
	KeyTime[317] = 93211;
	KeyTime[318] = 93392;
	KeyTime[319] = 93605;
	KeyTime[320] = 93813;
	KeyTime[321] = 94017;
	KeyTime[322] = 94250;
	KeyTime[323] = 94495;
	KeyTime[324] = 94702;
	KeyTime[325] = 94870;
	KeyTime[326] = 95054;
	KeyTime[327] = 95245;
	KeyTime[328] = 95470;
	KeyTime[329] = 95697;
	KeyTime[330] = 95903;
	KeyTime[331] = 96125;
	KeyTime[332] = 96395;
	KeyTime[333] = 96593;
	KeyTime[334] = 96779;
	KeyTime[335] = 96966;
	KeyTime[336] = 97172;
	KeyTime[337] = 97520;
	KeyTime[338] = 97788;
	KeyTime[339] = 98012;
	KeyTime[340] = 98285;
	KeyTime[341] = 98497;
	KeyTime[342] = 98675;
	KeyTime[343] = 98853;
	KeyTime[344] = 99054;
	KeyTime[345] = 99268;
	KeyTime[346] = 99465;
	KeyTime[347] = 99680;
	KeyTime[348] = 99928;
	KeyTime[349] = 100206;
	KeyTime[350] = 100381;
	KeyTime[351] = 100546;
	KeyTime[352] = 100720;
	KeyTime[353] = 100907;
	KeyTime[354] = 101102;
	KeyTime[355] = 101304;
	KeyTime[356] = 101516;
	KeyTime[357] = 101711;
	KeyTime[358] = 102020;
	KeyTime[359] = 102203;
	KeyTime[360] = 102363;
	KeyTime[361] = 102529;
	KeyTime[362] = 102707;
	KeyTime[363] = 102918;
	KeyTime[364] = 103153;
	KeyTime[365] = 103354;
	KeyTime[366] = 103570;
	KeyTime[367] = 103843;
	KeyTime[368] = 104025;
	KeyTime[369] = 104173;
	KeyTime[370] = 104339;
	KeyTime[371] = 104545;
	KeyTime[372] = 104761;
	KeyTime[373] = 104990;
	KeyTime[374] = 105179;
	KeyTime[375] = 105391;
	KeyTime[376] = 105668;
	KeyTime[377] = 105875;
	KeyTime[378] = 106083;
	KeyTime[379] = 106270;
	KeyTime[380] = 106487;
	KeyTime[381] = 106742;
	KeyTime[382] = 106994;
	KeyTime[383] = 107200;
	KeyTime[384] = 107430;
	KeyTime[385] = 107664;
	KeyTime[386] = 107885;
	KeyTime[387] = 108116;
	KeyTime[388] = 108604;
	KeyTime[389] = 109022;
	KeyTime[390] = 109215;
	KeyTime[391] = 109464;
	KeyTime[392] = 109714;
	KeyTime[393] = 109959;
	KeyTime[394] = 110186;
	KeyTime[395] = 110447;
	KeyTime[396] = 110673;
	KeyTime[397] = 111013;
	KeyTime[398] = 111204;
	KeyTime[399] = 111412;
	KeyTime[400] = 111611;
	KeyTime[401] = 111839;
	KeyTime[402] = 112290;
	KeyTime[403] = 112486;
	KeyTime[404] = 112733;
	KeyTime[405] = 113115;
	KeyTime[406] = 113275;
	KeyTime[407] = 113455;
	KeyTime[408] = 113670;
	KeyTime[409] = 114076;
	KeyTime[410] = 114536;
	KeyTime[411] = 115012;
	KeyTime[412] = 115486;
	KeyTime[413] = 115696;
	KeyTime[414] = 115919;
	KeyTime[415] = 116115;
	KeyTime[416] = 116286;
	KeyTime[417] = 116467;
	KeyTime[418] = 116644;
	KeyTime[419] = 116846;
	KeyTime[420] = 117170;
	KeyTime[421] = 117702;
	KeyTime[422] = 118041;
	KeyTime[423] = 118485;
	KeyTime[424] = 118686;
	KeyTime[425] = 118900;
	KeyTime[426] = 119158;
	KeyTime[427] = 119579;
	KeyTime[428] = 119886;
	KeyTime[429] = 120280;
	KeyTime[430] = 120460;
	KeyTime[431] = 120664;
	KeyTime[432] = 120888;
	KeyTime[433] = 121156;
	KeyTime[434] = 121483;
	KeyTime[435] = 121794;
	KeyTime[436] = 122168;
	KeyTime[437] = 122358;
	KeyTime[438] = 122577;
	KeyTime[439] = 122782;
	KeyTime[440] = 123176;
	KeyTime[441] = 123597;
	KeyTime[442] = 123985;
	KeyTime[443] = 124185;
	KeyTime[444] = 124383;
	KeyTime[445] = 124621;
	KeyTime[446] = 124993;
	KeyTime[447] = 125447;
	KeyTime[448] = 125826;
	KeyTime[449] = 126023;
	KeyTime[450] = 126228;
	KeyTime[451] = 126507;
	KeyTime[452] = 126974;
	KeyTime[453] = 127401;
	KeyTime[454] = 127759;
	KeyTime[455] = 127956;
	KeyTime[456] = 128167;
	KeyTime[457] = 128393;
	KeyTime[458] = 128783;
	KeyTime[459] = 129202;
	KeyTime[460] = 129577;
	KeyTime[461] = 129776;
	KeyTime[462] = 129985;
	KeyTime[463] = 130208;
	KeyTime[464] = 130601;
	KeyTime[465] = 131060;
	KeyTime[466] = 131454;
	KeyTime[467] = 131673;
	KeyTime[468] = 131891;
	KeyTime[469] = 132137;
	KeyTime[470] = 132558;
	KeyTime[471] = 132957;
	KeyTime[472] = 133372;
	KeyTime[473] = 133586;
	KeyTime[474] = 133781;
	KeyTime[475] = 134023;
	KeyTime[476] = 134396;
	KeyTime[477] = 134728;
	KeyTime[478] = 135112;
	KeyTime[479] = 135310;
	KeyTime[480] = 135523;
	KeyTime[481] = 135795;
	KeyTime[482] = 136248;
	KeyTime[483] = 136636;
	KeyTime[484] = 137042;
	KeyTime[485] = 137225;
	KeyTime[486] = 137454;
	KeyTime[487] = 137658;
	KeyTime[488] = 138071;
	KeyTime[489] = 138468;
	KeyTime[490] = 138843;
	KeyTime[491] = 139034;
	KeyTime[492] = 139260;
	KeyTime[493] = 139511;
	KeyTime[494] = 139727;
	KeyTime[495] = 139939;
	KeyTime[496] = 140167;
	KeyTime[497] = 140572;
	KeyTime[498] = 140778;
	KeyTime[499] = 140988;
	KeyTime[500] = 141198;
	KeyTime[501] = 141405;
	KeyTime[502] = 141714;
	KeyTime[503] = 141893;
	KeyTime[504] = 142101;
	KeyTime[505] = 142407;
	KeyTime[506] = 142618;
	KeyTime[507] = 142826;
	KeyTime[508] = 143025;
	KeyTime[509] = 143228;
	KeyTime[510] = 143589;
	KeyTime[511] = 143795;
	KeyTime[512] = 144000;
	KeyTime[513] = 144419;
	KeyTime[514] = 144799;
	KeyTime[515] = 145012;
	KeyTime[516] = 145248;
	KeyTime[517] = 145472;
	KeyTime[518] = 145683;
	KeyTime[519] = 145927;
	KeyTime[520] = 146304;
	KeyTime[521] = 146570;
	KeyTime[522] = 146973;
	KeyTime[523] = 147196;
	KeyTime[524] = 147381;
	KeyTime[525] = 147578;
	KeyTime[526] = 147803;
	KeyTime[527] = 148065;
	KeyTime[528] = 148287;
	KeyTime[529] = 148681;
	KeyTime[530] = 148886;
	KeyTime[531] = 149101;
	KeyTime[532] = 149321;
	KeyTime[533] = 149513;
	KeyTime[534] = 149718;
	KeyTime[535] = 150020;
	KeyTime[536] = 150210;
	KeyTime[537] = 150392;
	KeyTime[538] = 150571;
	KeyTime[539] = 150770;
	KeyTime[540] = 150964;
	KeyTime[541] = 151307;
	KeyTime[542] = 151532;
	KeyTime[543] = 151747;
	KeyTime[544] = 151966;
	KeyTime[545] = 152383;
	KeyTime[546] = 152604;
	KeyTime[547] = 152810;
	KeyTime[548] = 153022;
	KeyTime[549] = 153216;
	KeyTime[550] = 153416;
	KeyTime[551] = 153637;
	KeyTime[552] = 153836;
	KeyTime[553] = 154013;
	KeyTime[554] = 154185;
	KeyTime[555] = 154378;
	KeyTime[556] = 154605;
	KeyTime[557] = 154796;
	KeyTime[558] = 155015;
	KeyTime[559] = 155223;
	KeyTime[560] = 155472;
	KeyTime[561] = 155664;
	KeyTime[562] = 155836;
	KeyTime[563] = 156009;
	KeyTime[564] = 156187;
	KeyTime[565] = 156402;
	KeyTime[566] = 156647;
	KeyTime[567] = 156838;
	KeyTime[568] = 157047;
	KeyTime[569] = 157337;
	KeyTime[570] = 157517;
	KeyTime[571] = 157686;
	KeyTime[572] = 157863;
	KeyTime[573] = 158051;
	KeyTime[574] = 158284;
	KeyTime[575] = 158507;
	KeyTime[576] = 158724;
	KeyTime[577] = 158977;
	KeyTime[578] = 159227;
	KeyTime[579] = 159434;
	KeyTime[580] = 159606;
	KeyTime[581] = 159803;
	KeyTime[582] = 160060;
	KeyTime[583] = 160293;
	KeyTime[584] = 160522;
	KeyTime[585] = 160768;
	KeyTime[586] = 161014;
	KeyTime[587] = 161216;
	KeyTime[588] = 161377;
	KeyTime[589] = 161536;
	KeyTime[590] = 161715;
	KeyTime[591] = 161945;
	KeyTime[592] = 162210;
	KeyTime[593] = 162411;
	KeyTime[594] = 162635;
	KeyTime[595] = 162896;
	KeyTime[596] = 163099;
	KeyTime[597] = 163267;
	KeyTime[598] = 163434;
	KeyTime[599] = 163608;
	KeyTime[600] = 163856;
	KeyTime[601] = 164063;
	KeyTime[602] = 164279;
	KeyTime[603] = 164496;
	KeyTime[604] = 164743;
	KeyTime[605] = 164941;
	KeyTime[606] = 165098;
	KeyTime[607] = 165263;
	KeyTime[608] = 165463;
	KeyTime[609] = 165692;
	KeyTime[610] = 165897;
	KeyTime[611] = 166106;
	KeyTime[612] = 166330;
	KeyTime[613] = 166572;
	KeyTime[614] = 166768;
	KeyTime[615] = 166932;
	KeyTime[616] = 167090;
	KeyTime[617] = 167270;
	KeyTime[618] = 167532;
	KeyTime[619] = 167736;
	KeyTime[620] = 167967;
	KeyTime[621] = 168206;
	KeyTime[622] = 168418;
	KeyTime[623] = 168660;
	KeyTime[624] = 168878;
	KeyTime[625] = 169124;
	KeyTime[626] = 169577;
	KeyTime[627] = 169975;
	KeyTime[628] = 170218;
	KeyTime[629] = 170464;
	KeyTime[630] = 170685;
	KeyTime[631] = 170900;
	KeyTime[632] = 171115;
	KeyTime[633] = 171353;
	KeyTime[634] = 171585;
	KeyTime[635] = 171900;
	KeyTime[636] = 172110;
	KeyTime[637] = 172333;
	KeyTime[638] = 172542;
	KeyTime[639] = 172779;
	KeyTime[640] = 173114;
	KeyTime[641] = 173324;
	KeyTime[642] = 173548;
	KeyTime[643] = 173756;
	KeyTime[644] = 174017;
	KeyTime[645] = 174208;
	KeyTime[646] = 174429;
	KeyTime[647] = 174653;
	KeyTime[648] = 175058;
	KeyTime[649] = 175510;
	KeyTime[650] = 175931;
	KeyTime[651] = 176456;
	KeyTime[652] = 176853;
	KeyTime[653] = 177059;
	KeyTime[654] = 177269;
	KeyTime[655] = 177491;
	KeyTime[656] = 177702;
	KeyTime[657] = 177942;
	KeyTime[658] = 178247;
	KeyTime[659] = 178740;
	KeyTime[660] = 179196;
	KeyTime[661] = 179640;
	KeyTime[662] = 180128;
	KeyTime[663] = 180609;
	KeyTime[664] = 181086;
	KeyTime[665] = 181555;
	KeyTime[666] = 182051;
	KeyTime[667] = 182458;
	KeyTime[668] = 183292;
	KeyTime[669] = 184214;
	KeyTime[670] = 185193;
	KeyTime[671] = 186106;
	KeyTime[672] = 186983;
	KeyTime[673] = 187737;
	KeyTime[674] = 188100;
	KeyTime[675] = 188490;
	KeyTime[676] = 188916;
	KeyTime[677] = 189401;
	KeyTime[678] = 189897;
	KeyTime[679] = 190384;
	KeyTime[680] = 190591;
	KeyTime[681] = 190794;
	KeyTime[682] = 190978;
	KeyTime[683] = 191170;
	KeyTime[684] = 191354;
	KeyTime[685] = 191562;
	KeyTime[686] = 191749;
	KeyTime[687] = 191930;
	KeyTime[688] = 192147;
	KeyTime[689] = 192333;
	KeyTime[690] = 192512;
	KeyTime[691] = 192698;
	KeyTime[692] = 192876;
	KeyTime[693] = 193086;
	KeyTime[694] = 193278;
	KeyTime[695] = 193465;
	KeyTime[696] = 193647;
	KeyTime[697] = 193849;
	KeyTime[698] = 194070;
	KeyTime[699] = 194258;
	KeyTime[700] = 194438;
	KeyTime[701] = 194623;
	KeyTime[702] = 194781;
	KeyTime[703] = 194964;
	KeyTime[704] = 195411;
	KeyTime[705] = 195598;
	KeyTime[706] = 195792;
	KeyTime[707] = 196144;
	KeyTime[708] = 196316;
	KeyTime[709] = 196625;
	KeyTime[710] = 196782;
	KeyTime[711] = 196935;
	KeyTime[712] = 0;
	KeyPositionX[0] = 66;
	KeyPositionY[0] = 44;
	isSpecialKey[0] = 0;
	KeyPositionX[1] = 69;
	KeyPositionY[1] = 136;
	isSpecialKey[1] = 0;
	KeyPositionX[2] = 168;
	KeyPositionY[2] = 144;
	isSpecialKey[2] = 0;
	KeyPositionX[3] = 257;
	KeyPositionY[3] = 135;
	isSpecialKey[3] = 1;
	KeyPositionX[4] = 322;
	KeyPositionY[4] = 132;
	isSpecialKey[4] = 0;
	KeyPositionX[5] = 411;
	KeyPositionY[5] = 132;
	isSpecialKey[5] = 1;
	KeyPositionX[6] = 411;
	KeyPositionY[6] = 191;
	isSpecialKey[6] = 0;
	KeyPositionX[7] = 410;
	KeyPositionY[7] = 228;
	isSpecialKey[7] = 0;
	KeyPositionX[8] = 353;
	KeyPositionY[8] = 235;
	isSpecialKey[8] = 0;
	KeyPositionX[9] = 318;
	KeyPositionY[9] = 232;
	isSpecialKey[9] = 0;
	KeyPositionX[10] = 312;
	KeyPositionY[10] = 184;
	isSpecialKey[10] = 0;
	KeyPositionX[11] = 314;
	KeyPositionY[11] = 131;
	isSpecialKey[11] = 0;
	KeyPositionX[12] = 310;
	KeyPositionY[12] = 86;
	isSpecialKey[12] = 0;
	KeyPositionX[13] = 309;
	KeyPositionY[13] = 48;
	isSpecialKey[13] = 1;
	KeyPositionX[14] = 257;
	KeyPositionY[14] = 37;
	isSpecialKey[14] = 0;
	KeyPositionX[15] = 256;
	KeyPositionY[15] = 76;
	isSpecialKey[15] = 1;
	KeyPositionX[16] = 255;
	KeyPositionY[16] = 135;
	isSpecialKey[16] = 0;
	KeyPositionX[17] = 255;
	KeyPositionY[17] = 184;
	isSpecialKey[17] = 0;
	KeyPositionX[18] = 194;
	KeyPositionY[18] = 181;
	isSpecialKey[18] = 0;
	KeyPositionX[19] = 204;
	KeyPositionY[19] = 130;
	isSpecialKey[19] = 0;
	KeyPositionX[20] = 160;
	KeyPositionY[20] = 139;
	isSpecialKey[20] = 0;
	KeyPositionX[21] = 116;
	KeyPositionY[21] = 188;
	isSpecialKey[21] = 0;
	KeyPositionX[22] = 164;
	KeyPositionY[22] = 186;
	isSpecialKey[22] = 0;
	KeyPositionX[23] = 211;
	KeyPositionY[23] = 186;
	isSpecialKey[23] = 0;
	KeyPositionX[24] = 255;
	KeyPositionY[24] = 137;
	isSpecialKey[24] = 1;
	KeyPositionX[25] = 319;
	KeyPositionY[25] = 94;
	isSpecialKey[25] = 0;
	KeyPositionX[26] = 358;
	KeyPositionY[26] = 48;
	isSpecialKey[26] = 0;
	KeyPositionX[27] = 310;
	KeyPositionY[27] = 37;
	isSpecialKey[27] = 0;
	KeyPositionX[28] = 265;
	KeyPositionY[28] = 38;
	isSpecialKey[28] = 0;
	KeyPositionX[29] = 317;
	KeyPositionY[29] = 84;
	isSpecialKey[29] = 1;
	KeyPositionX[30] = 354;
	KeyPositionY[30] = 132;
	isSpecialKey[30] = 0;
	KeyPositionX[31] = 413;
	KeyPositionY[31] = 192;
	isSpecialKey[31] = 0;
	KeyPositionX[32] = 356;
	KeyPositionY[32] = 194;
	isSpecialKey[32] = 0;
	KeyPositionX[33] = 312;
	KeyPositionY[33] = 187;
	isSpecialKey[33] = 0;
	KeyPositionX[34] = 267;
	KeyPositionY[34] = 180;
	isSpecialKey[34] = 0;
	KeyPositionX[35] = 217;
	KeyPositionY[35] = 180;
	isSpecialKey[35] = 0;
	KeyPositionX[36] = 162;
	KeyPositionY[36] = 189;
	isSpecialKey[36] = 0;
	KeyPositionX[37] = 218;
	KeyPositionY[37] = 238;
	isSpecialKey[37] = 0;
	KeyPositionX[38] = 258;
	KeyPositionY[38] = 237;
	isSpecialKey[38] = 0;
	KeyPositionX[39] = 272;
	KeyPositionY[39] = 197;
	isSpecialKey[39] = 0;
	KeyPositionX[40] = 302;
	KeyPositionY[40] = 179;
	isSpecialKey[40] = 0;
	KeyPositionX[41] = 169;
	KeyPositionY[41] = 141;
	isSpecialKey[41] = 1;
	KeyPositionX[42] = 307;
	KeyPositionY[42] = 132;
	isSpecialKey[42] = 0;
	KeyPositionX[43] = 164;
	KeyPositionY[43] = 188;
	isSpecialKey[43] = 0;
	KeyPositionX[44] = 304;
	KeyPositionY[44] = 191;
	isSpecialKey[44] = 0;
	KeyPositionX[45] = 167;
	KeyPositionY[45] = 228;
	isSpecialKey[45] = 0;
	KeyPositionX[46] = 302;
	KeyPositionY[46] = 182;
	isSpecialKey[46] = 0;
	KeyPositionX[47] = 165;
	KeyPositionY[47] = 139;
	isSpecialKey[47] = 0;
	KeyPositionX[48] = 306;
	KeyPositionY[48] = 87;
	isSpecialKey[48] = 0;
	KeyPositionX[49] = 163;
	KeyPositionY[49] = 40;
	isSpecialKey[49] = 0;
	KeyPositionX[50] = 300;
	KeyPositionY[50] = 32;
	isSpecialKey[50] = 0;
	KeyPositionX[51] = 169;
	KeyPositionY[51] = 97;
	isSpecialKey[51] = 0;
	KeyPositionX[52] = 305;
	KeyPositionY[52] = 146;
	isSpecialKey[52] = 0;
	KeyPositionX[53] = 168;
	KeyPositionY[53] = 177;
	isSpecialKey[53] = 0;
	KeyPositionX[54] = 318;
	KeyPositionY[54] = 226;
	isSpecialKey[54] = 0;
	KeyPositionX[55] = 160;
	KeyPositionY[55] = 222;
	isSpecialKey[55] = 0;
	KeyPositionX[56] = 104;
	KeyPositionY[56] = 178;
	isSpecialKey[56] = 0;
	KeyPositionX[57] = 60;
	KeyPositionY[57] = 137;
	isSpecialKey[57] = 0;
	KeyPositionX[58] = 73;
	KeyPositionY[58] = 91;
	isSpecialKey[58] = 1;
	KeyPositionX[59] = 125;
	KeyPositionY[59] = 92;
	isSpecialKey[59] = 0;
	KeyPositionX[60] = 164;
	KeyPositionY[60] = 94;
	isSpecialKey[60] = 0;
	KeyPositionX[61] = 216;
	KeyPositionY[61] = 90;
	isSpecialKey[61] = 0;
	KeyPositionX[62] = 254;
	KeyPositionY[62] = 135;
	isSpecialKey[62] = 0;
	KeyPositionX[63] = 320;
	KeyPositionY[63] = 176;
	isSpecialKey[63] = 0;
	KeyPositionX[64] = 351;
	KeyPositionY[64] = 196;
	isSpecialKey[64] = 0;
	KeyPositionX[65] = 307;
	KeyPositionY[65] = 226;
	isSpecialKey[65] = 0;
	KeyPositionX[66] = 253;
	KeyPositionY[66] = 237;
	isSpecialKey[66] = 0;
	KeyPositionX[67] = 217;
	KeyPositionY[67] = 241;
	isSpecialKey[67] = 0;
	KeyPositionX[68] = 169;
	KeyPositionY[68] = 245;
	isSpecialKey[68] = 1;
	KeyPositionX[69] = 117;
	KeyPositionY[69] = 237;
	isSpecialKey[69] = 0;
	KeyPositionX[70] = 205;
	KeyPositionY[70] = 187;
	isSpecialKey[70] = 0;
	KeyPositionX[71] = 256;
	KeyPositionY[71] = 146;
	isSpecialKey[71] = 0;
	KeyPositionX[72] = 307;
	KeyPositionY[72] = 101;
	isSpecialKey[72] = 0;
	KeyPositionX[73] = 361;
	KeyPositionY[73] = 53;
	isSpecialKey[73] = 0;
	KeyPositionX[74] = 396;
	KeyPositionY[74] = 45;
	isSpecialKey[74] = 0;
	KeyPositionX[75] = 458;
	KeyPositionY[75] = 141;
	isSpecialKey[75] = 0;
	KeyPositionX[76] = 416;
	KeyPositionY[76] = 148;
	isSpecialKey[76] = 0;
	KeyPositionX[77] = 358;
	KeyPositionY[77] = 149;
	isSpecialKey[77] = 0;
	KeyPositionX[78] = 369;
	KeyPositionY[78] = 183;
	isSpecialKey[78] = 0;
	KeyPositionX[79] = 398;
	KeyPositionY[79] = 218;
	isSpecialKey[79] = 1;
	KeyPositionX[80] = 361;
	KeyPositionY[80] = 228;
	isSpecialKey[80] = 0;
	KeyPositionX[81] = 319;
	KeyPositionY[81] = 238;
	isSpecialKey[81] = 0;
	KeyPositionX[82] = 297;
	KeyPositionY[82] = 176;
	isSpecialKey[82] = 0;
	KeyPositionX[83] = 242;
	KeyPositionY[83] = 140;
	isSpecialKey[83] = 0;
	KeyPositionX[84] = 212;
	KeyPositionY[84] = 131;
	isSpecialKey[84] = 0;
	KeyPositionX[85] = 156;
	KeyPositionY[85] = 134;
	isSpecialKey[85] = 0;
	KeyPositionX[86] = 122;
	KeyPositionY[86] = 139;
	isSpecialKey[86] = 0;
	KeyPositionX[87] = 124;
	KeyPositionY[87] = 177;
	isSpecialKey[87] = 0;
	KeyPositionX[88] = 167;
	KeyPositionY[88] = 185;
	isSpecialKey[88] = 0;
	KeyPositionX[89] = 222;
	KeyPositionY[89] = 185;
	isSpecialKey[89] = 0;
	KeyPositionX[90] = 260;
	KeyPositionY[90] = 196;
	isSpecialKey[90] = 0;
	KeyPositionX[91] = 325;
	KeyPositionY[91] = 190;
	isSpecialKey[91] = 0;
	KeyPositionX[92] = 353;
	KeyPositionY[92] = 184;
	isSpecialKey[92] = 1;
	KeyPositionX[93] = 322;
	KeyPositionY[93] = 233;
	isSpecialKey[93] = 0;
	KeyPositionX[94] = 313;
	KeyPositionY[94] = 190;
	isSpecialKey[94] = 1;
	KeyPositionX[95] = 311;
	KeyPositionY[95] = 146;
	isSpecialKey[95] = 0;
	KeyPositionX[96] = 256;
	KeyPositionY[96] = 134;
	isSpecialKey[96] = 0;
	KeyPositionX[97] = 206;
	KeyPositionY[97] = 147;
	isSpecialKey[97] = 0;
	KeyPositionX[98] = 168;
	KeyPositionY[98] = 147;
	isSpecialKey[98] = 0;
	KeyPositionX[99] = 166;
	KeyPositionY[99] = 177;
	isSpecialKey[99] = 0;
	KeyPositionX[100] = 212;
	KeyPositionY[100] = 189;
	isSpecialKey[100] = 0;
	KeyPositionX[101] = 276;
	KeyPositionY[101] = 186;
	isSpecialKey[101] = 0;
	KeyPositionX[102] = 312;
	KeyPositionY[102] = 186;
	isSpecialKey[102] = 0;
	KeyPositionX[103] = 351;
	KeyPositionY[103] = 138;
	isSpecialKey[103] = 0;
	KeyPositionX[104] = 352;
	KeyPositionY[104] = 85;
	isSpecialKey[104] = 0;
	KeyPositionX[105] = 362;
	KeyPositionY[105] = 45;
	isSpecialKey[105] = 0;
	KeyPositionX[106] = 310;
	KeyPositionY[106] = 48;
	isSpecialKey[106] = 0;
	KeyPositionX[107] = 169;
	KeyPositionY[107] = 39;
	isSpecialKey[107] = 0;
	KeyPositionX[108] = 276;
	KeyPositionY[108] = 77;
	isSpecialKey[108] = 0;
	KeyPositionX[109] = 165;
	KeyPositionY[109] = 133;
	isSpecialKey[109] = 1;
	KeyPositionX[110] = 274;
	KeyPositionY[110] = 151;
	isSpecialKey[110] = 0;
	KeyPositionX[111] = 167;
	KeyPositionY[111] = 195;
	isSpecialKey[111] = 1;
	KeyPositionX[112] = 268;
	KeyPositionY[112] = 212;
	isSpecialKey[112] = 0;
	KeyPositionX[113] = 349;
	KeyPositionY[113] = 171;
	isSpecialKey[113] = 0;
	KeyPositionX[114] = 392;
	KeyPositionY[114] = 124;
	isSpecialKey[114] = 0;
	KeyPositionX[115] = 397;
	KeyPositionY[115] = 63;
	isSpecialKey[115] = 0;
	KeyPositionX[116] = 298;
	KeyPositionY[116] = 46;
	isSpecialKey[116] = 0;
	KeyPositionX[117] = 174;
	KeyPositionY[117] = 35;
	isSpecialKey[117] = 0;
	KeyPositionX[118] = 90;
	KeyPositionY[118] = 73;
	isSpecialKey[118] = 0;
	KeyPositionX[119] = 42;
	KeyPositionY[119] = 152;
	isSpecialKey[119] = 0;
	KeyPositionX[120] = 77;
	KeyPositionY[120] = 222;
	isSpecialKey[120] = 0;
	KeyPositionX[121] = 145;
	KeyPositionY[121] = 238;
	isSpecialKey[121] = 0;
	KeyPositionX[122] = 239;
	KeyPositionY[122] = 241;
	isSpecialKey[122] = 0;
	KeyPositionX[123] = 342;
	KeyPositionY[123] = 234;
	isSpecialKey[123] = 0;
	KeyPositionX[124] = 417;
	KeyPositionY[124] = 171;
	isSpecialKey[124] = 0;
	KeyPositionX[125] = 440;
	KeyPositionY[125] = 99;
	isSpecialKey[125] = 0;
	KeyPositionX[126] = 354;
	KeyPositionY[126] = 90;
	isSpecialKey[126] = 1;
	KeyPositionX[127] = 284;
	KeyPositionY[127] = 103;
	isSpecialKey[127] = 0;
	KeyPositionX[128] = 180;
	KeyPositionY[128] = 96;
	isSpecialKey[128] = 0;
	KeyPositionX[129] = 105;
	KeyPositionY[129] = 114;
	isSpecialKey[129] = 0;
	KeyPositionX[130] = 76;
	KeyPositionY[130] = 183;
	isSpecialKey[130] = 0;
	KeyPositionX[131] = 163;
	KeyPositionY[131] = 191;
	isSpecialKey[131] = 0;
	KeyPositionX[132] = 223;
	KeyPositionY[132] = 181;
	isSpecialKey[132] = 0;
	KeyPositionX[133] = 269;
	KeyPositionY[133] = 186;
	isSpecialKey[133] = 0;
	KeyPositionX[134] = 306;
	KeyPositionY[134] = 185;
	isSpecialKey[134] = 0;
	KeyPositionX[135] = 369;
	KeyPositionY[135] = 178;
	isSpecialKey[135] = 1;
	KeyPositionX[136] = 370;
	KeyPositionY[136] = 224;
	isSpecialKey[136] = 0;
	KeyPositionX[137] = 440;
	KeyPositionY[137] = 237;
	isSpecialKey[137] = 0;
	KeyPositionX[138] = 304;
	KeyPositionY[138] = 238;
	isSpecialKey[138] = 0;
	KeyPositionX[139] = 209;
	KeyPositionY[139] = 244;
	isSpecialKey[139] = 0;
	KeyPositionX[140] = 122;
	KeyPositionY[140] = 242;
	isSpecialKey[140] = 0;
	KeyPositionX[141] = 217;
	KeyPositionY[141] = 198;
	isSpecialKey[141] = 0;
	KeyPositionX[142] = 308;
	KeyPositionY[142] = 140;
	isSpecialKey[142] = 1;
	KeyPositionX[143] = 374;
	KeyPositionY[143] = 96;
	isSpecialKey[143] = 0;
	KeyPositionX[144] = 440;
	KeyPositionY[144] = 42;
	isSpecialKey[144] = 0;
	KeyPositionX[145] = 62;
	KeyPositionY[145] = 46;
	isSpecialKey[145] = 0;
	KeyPositionX[146] = 113;
	KeyPositionY[146] = 99;
	isSpecialKey[146] = 0;
	KeyPositionX[147] = 164;
	KeyPositionY[147] = 134;
	isSpecialKey[147] = 0;
	KeyPositionX[148] = 230;
	KeyPositionY[148] = 180;
	isSpecialKey[148] = 0;
	KeyPositionX[149] = 292;
	KeyPositionY[149] = 211;
	isSpecialKey[149] = 0;
	KeyPositionX[150] = 377;
	KeyPositionY[150] = 247;
	isSpecialKey[150] = 0;
	KeyPositionX[151] = 413;
	KeyPositionY[151] = 263;
	isSpecialKey[151] = 1;
	KeyPositionX[152] = 257;
	KeyPositionY[152] = 148;
	isSpecialKey[152] = 0;
	KeyPositionX[153] = 257;
	KeyPositionY[153] = 184;
	isSpecialKey[153] = 1;
	KeyPositionX[154] = 213;
	KeyPositionY[154] = 146;
	isSpecialKey[154] = 0;
	KeyPositionX[155] = 211;
	KeyPositionY[155] = 180;
	isSpecialKey[155] = 0;
	KeyPositionX[156] = 180;
	KeyPositionY[156] = 143;
	isSpecialKey[156] = 0;
	KeyPositionX[157] = 180;
	KeyPositionY[157] = 171;
	isSpecialKey[157] = 0;
	KeyPositionX[158] = 308;
	KeyPositionY[158] = 180;
	isSpecialKey[158] = 0;
	KeyPositionX[159] = 108;
	KeyPositionY[159] = 194;
	isSpecialKey[159] = 0;
	KeyPositionX[160] = 119;
	KeyPositionY[160] = 228;
	isSpecialKey[160] = 0;
	KeyPositionX[161] = 185;
	KeyPositionY[161] = 231;
	isSpecialKey[161] = 0;
	KeyPositionX[162] = 214;
	KeyPositionY[162] = 231;
	isSpecialKey[162] = 0;
	KeyPositionX[163] = 255;
	KeyPositionY[163] = 229;
	isSpecialKey[163] = 0;
	KeyPositionX[164] = 306;
	KeyPositionY[164] = 230;
	isSpecialKey[164] = 0;
	KeyPositionX[165] = 350;
	KeyPositionY[165] = 233;
	isSpecialKey[165] = 0;
	KeyPositionX[166] = 349;
	KeyPositionY[166] = 179;
	isSpecialKey[166] = 0;
	KeyPositionX[167] = 348;
	KeyPositionY[167] = 138;
	isSpecialKey[167] = 0;
	KeyPositionX[168] = 297;
	KeyPositionY[168] = 141;
	isSpecialKey[168] = 0;
	KeyPositionX[169] = 239;
	KeyPositionY[169] = 149;
	isSpecialKey[169] = 0;
	KeyPositionX[170] = 202;
	KeyPositionY[170] = 149;
	isSpecialKey[170] = 1;
	KeyPositionX[171] = 124;
	KeyPositionY[171] = 143;
	isSpecialKey[171] = 0;
	KeyPositionX[172] = 46;
	KeyPositionY[172] = 127;
	isSpecialKey[172] = 0;
	KeyPositionX[173] = 63;
	KeyPositionY[173] = 195;
	isSpecialKey[173] = 0;
	KeyPositionX[174] = 50;
	KeyPositionY[174] = 229;
	isSpecialKey[174] = 1;
	KeyPositionX[175] = 122;
	KeyPositionY[175] = 221;
	isSpecialKey[175] = 0;
	KeyPositionX[176] = 184;
	KeyPositionY[176] = 210;
	isSpecialKey[176] = 0;
	KeyPositionX[177] = 237;
	KeyPositionY[177] = 215;
	isSpecialKey[177] = 0;
	KeyPositionX[178] = 293;
	KeyPositionY[178] = 213;
	isSpecialKey[178] = 0;
	KeyPositionX[179] = 365;
	KeyPositionY[179] = 213;
	isSpecialKey[179] = 0;
	KeyPositionX[180] = 414;
	KeyPositionY[180] = 216;
	isSpecialKey[180] = 0;
	KeyPositionX[181] = 405;
	KeyPositionY[181] = 150;
	isSpecialKey[181] = 0;
	KeyPositionX[182] = 405;
	KeyPositionY[182] = 74;
	isSpecialKey[182] = 0;
	KeyPositionX[183] = 99;
	KeyPositionY[183] = 156;
	isSpecialKey[183] = 0;
	KeyPositionX[184] = 402;
	KeyPositionY[184] = 227;
	isSpecialKey[184] = 0;
	KeyPositionX[185] = 103;
	KeyPositionY[185] = 277;
	isSpecialKey[185] = 0;
	KeyPositionX[186] = 391;
	KeyPositionY[186] = 93;
	isSpecialKey[186] = 0;
	KeyPositionX[187] = 149;
	KeyPositionY[187] = 85;
	isSpecialKey[187] = 0;
	KeyPositionX[188] = 364;
	KeyPositionY[188] = 197;
	isSpecialKey[188] = 0;
	KeyPositionX[189] = 148;
	KeyPositionY[189] = 219;
	isSpecialKey[189] = 0;
	KeyPositionX[190] = 320;
	KeyPositionY[190] = 73;
	isSpecialKey[190] = 0;
	KeyPositionX[191] = 121;
	KeyPositionY[191] = 161;
	isSpecialKey[191] = 0;
	KeyPositionX[192] = 347;
	KeyPositionY[192] = 161;
	isSpecialKey[192] = 0;
	KeyPositionX[193] = 221;
	KeyPositionY[193] = 81;
	isSpecialKey[193] = 0;
	KeyPositionX[194] = 229;
	KeyPositionY[194] = 229;
	isSpecialKey[194] = 0;
	KeyPositionX[195] = 127;
	KeyPositionY[195] = 150;
	isSpecialKey[195] = 0;
	KeyPositionX[196] = 317;
	KeyPositionY[196] = 145;
	isSpecialKey[196] = 0;
	KeyPositionX[197] = 315;
	KeyPositionY[197] = 91;
	isSpecialKey[197] = 0;
	KeyPositionX[198] = 155;
	KeyPositionY[198] = 243;
	isSpecialKey[198] = 0;
	KeyPositionX[199] = 312;
	KeyPositionY[199] = 250;
	isSpecialKey[199] = 0;
	KeyPositionX[200] = 115;
	KeyPositionY[200] = 98;
	isSpecialKey[200] = 0;
	KeyPositionX[201] = 319;
	KeyPositionY[201] = 89;
	isSpecialKey[201] = 0;
	KeyPositionX[202] = 148;
	KeyPositionY[202] = 256;
	isSpecialKey[202] = 0;
	KeyPositionX[203] = 330;
	KeyPositionY[203] = 235;
	isSpecialKey[203] = 1;
	KeyPositionX[204] = 92;
	KeyPositionY[204] = 102;
	isSpecialKey[204] = 1;
	KeyPositionX[205] = 235;
	KeyPositionY[205] = 39;
	isSpecialKey[205] = 0;
	KeyPositionX[206] = 367;
	KeyPositionY[206] = 89;
	isSpecialKey[206] = 0;
	KeyPositionX[207] = 386;
	KeyPositionY[207] = 192;
	isSpecialKey[207] = 0;
	KeyPositionX[208] = 303;
	KeyPositionY[208] = 292;
	isSpecialKey[208] = 0;
	KeyPositionX[209] = 148;
	KeyPositionY[209] = 272;
	isSpecialKey[209] = 0;
	KeyPositionX[210] = 92;
	KeyPositionY[210] = 146;
	isSpecialKey[210] = 0;
	KeyPositionX[211] = 194;
	KeyPositionY[211] = 137;
	isSpecialKey[211] = 0;
	KeyPositionX[212] = 281;
	KeyPositionY[212] = 133;
	isSpecialKey[212] = 0;
	KeyPositionX[213] = 379;
	KeyPositionY[213] = 127;
	isSpecialKey[213] = 0;
	KeyPositionX[214] = 261;
	KeyPositionY[214] = 236;
	isSpecialKey[214] = 0;
	KeyPositionX[215] = 260;
	KeyPositionY[215] = 167;
	isSpecialKey[215] = 0;
	KeyPositionX[216] = 260;
	KeyPositionY[216] = 71;
	isSpecialKey[216] = 0;
	KeyPositionX[217] = 339;
	KeyPositionY[217] = 204;
	isSpecialKey[217] = 0;
	KeyPositionX[218] = 169;
	KeyPositionY[218] = 128;
	isSpecialKey[218] = 0;
	KeyPositionX[219] = 83;
	KeyPositionY[219] = 175;
	isSpecialKey[219] = 0;
	KeyPositionX[220] = 373;
	KeyPositionY[220] = 176;
	isSpecialKey[220] = 0;
	KeyPositionX[221] = 134;
	KeyPositionY[221] = 133;
	isSpecialKey[221] = 0;
	KeyPositionX[222] = 318;
	KeyPositionY[222] = 149;
	isSpecialKey[222] = 0;
	KeyPositionX[223] = 128;
	KeyPositionY[223] = 203;
	isSpecialKey[223] = 0;
	KeyPositionX[224] = 349;
	KeyPositionY[224] = 203;
	isSpecialKey[224] = 0;
	KeyPositionX[225] = 122;
	KeyPositionY[225] = 244;
	isSpecialKey[225] = 0;
	KeyPositionX[226] = 344;
	KeyPositionY[226] = 246;
	isSpecialKey[226] = 0;
	KeyPositionX[227] = 355;
	KeyPositionY[227] = 32;
	isSpecialKey[227] = 0;
	KeyPositionX[228] = 205;
	KeyPositionY[228] = 261;
	isSpecialKey[228] = 0;
	KeyPositionX[229] = 133;
	KeyPositionY[229] = 41;
	isSpecialKey[229] = 0;
	KeyPositionX[230] = 330;
	KeyPositionY[230] = 253;
	isSpecialKey[230] = 0;
	KeyPositionX[231] = 251;
	KeyPositionY[231] = 82;
	isSpecialKey[231] = 0;
	KeyPositionX[232] = 255;
	KeyPositionY[232] = 257;
	isSpecialKey[232] = 0;
	KeyPositionX[233] = 157;
	KeyPositionY[233] = 189;
	isSpecialKey[233] = 0;
	KeyPositionX[234] = 341;
	KeyPositionY[234] = 183;
	isSpecialKey[234] = 0;
	KeyPositionX[235] = 124;
	KeyPositionY[235] = 143;
	isSpecialKey[235] = 0;
	KeyPositionX[236] = 349;
	KeyPositionY[236] = 141;
	isSpecialKey[236] = 0;
	KeyPositionX[237] = 113;
	KeyPositionY[237] = 93;
	isSpecialKey[237] = 0;
	KeyPositionX[238] = 355;
	KeyPositionY[238] = 91;
	isSpecialKey[238] = 0;
	KeyPositionX[239] = 127;
	KeyPositionY[239] = 206;
	isSpecialKey[239] = 0;
	KeyPositionX[240] = 365;
	KeyPositionY[240] = 208;
	isSpecialKey[240] = 0;
	KeyPositionX[241] = 128;
	KeyPositionY[241] = 280;
	isSpecialKey[241] = 0;
	KeyPositionX[242] = 363;
	KeyPositionY[242] = 267;
	isSpecialKey[242] = 0;
	KeyPositionX[243] = 198;
	KeyPositionY[243] = 51;
	isSpecialKey[243] = 0;
	KeyPositionX[244] = 183;
	KeyPositionY[244] = 249;
	isSpecialKey[244] = 0;
	KeyPositionX[245] = 184;
	KeyPositionY[245] = 152;
	isSpecialKey[245] = 0;
	KeyPositionX[246] = 331;
	KeyPositionY[246] = 153;
	isSpecialKey[246] = 0;
	KeyPositionX[247] = 327;
	KeyPositionY[247] = 49;
	isSpecialKey[247] = 0;
	KeyPositionX[248] = 350;
	KeyPositionY[248] = 247;
	isSpecialKey[248] = 0;
	KeyPositionX[249] = 82;
	KeyPositionY[249] = 148;
	isSpecialKey[249] = 0;
	KeyPositionX[250] = 160;
	KeyPositionY[250] = 120;
	isSpecialKey[250] = 0;
	KeyPositionX[251] = 203;
	KeyPositionY[251] = 160;
	isSpecialKey[251] = 0;
	KeyPositionX[252] = 264;
	KeyPositionY[252] = 117;
	isSpecialKey[252] = 0;
	KeyPositionX[253] = 323;
	KeyPositionY[253] = 149;
	isSpecialKey[253] = 0;
	KeyPositionX[254] = 374;
	KeyPositionY[254] = 104;
	isSpecialKey[254] = 0;
	KeyPositionX[255] = 451;
	KeyPositionY[255] = 204;
	isSpecialKey[255] = 0;
	KeyPositionX[256] = 103;
	KeyPositionY[256] = 248;
	isSpecialKey[256] = 0;
	KeyPositionX[257] = 116;
	KeyPositionY[257] = 123;
	isSpecialKey[257] = 0;
	KeyPositionX[258] = 126;
	KeyPositionY[258] = 39;
	isSpecialKey[258] = 1;
	KeyPositionX[259] = 317;
	KeyPositionY[259] = 108;
	isSpecialKey[259] = 0;
	KeyPositionX[260] = 240;
	KeyPositionY[260] = 238;
	isSpecialKey[260] = 0;
	KeyPositionX[261] = 193;
	KeyPositionY[261] = 143;
	isSpecialKey[261] = 0;
	KeyPositionX[262] = 355;
	KeyPositionY[262] = 136;
	isSpecialKey[262] = 0;
	KeyPositionX[263] = 334;
	KeyPositionY[263] = 73;
	isSpecialKey[263] = 0;
	KeyPositionX[264] = 377;
	KeyPositionY[264] = 199;
	isSpecialKey[264] = 1;
	KeyPositionX[265] = 242;
	KeyPositionY[265] = 212;
	isSpecialKey[265] = 0;
	KeyPositionX[266] = 61;
	KeyPositionY[266] = 215;
	isSpecialKey[266] = 0;
	KeyPositionX[267] = 44;
	KeyPositionY[267] = 109;
	isSpecialKey[267] = 0;
	KeyPositionX[268] = 112;
	KeyPositionY[268] = 102;
	isSpecialKey[268] = 0;
	KeyPositionX[269] = 241;
	KeyPositionY[269] = 91;
	isSpecialKey[269] = 0;
	KeyPositionX[270] = 345;
	KeyPositionY[270] = 91;
	isSpecialKey[270] = 0;
	KeyPositionX[271] = 440;
	KeyPositionY[271] = 138;
	isSpecialKey[271] = 0;
	KeyPositionX[272] = 442;
	KeyPositionY[272] = 218;
	isSpecialKey[272] = 0;
	KeyPositionX[273] = 292;
	KeyPositionY[273] = 225;
	isSpecialKey[273] = 1;
	KeyPositionX[274] = 266;
	KeyPositionY[274] = 173;
	isSpecialKey[274] = 0;
	KeyPositionX[275] = 250;
	KeyPositionY[275] = 121;
	isSpecialKey[275] = 0;
	KeyPositionX[276] = 159;
	KeyPositionY[276] = 85;
	isSpecialKey[276] = 0;
	KeyPositionX[277] = 161;
	KeyPositionY[277] = 172;
	isSpecialKey[277] = 0;
	KeyPositionX[278] = 236;
	KeyPositionY[278] = 140;
	isSpecialKey[278] = 0;
	KeyPositionX[279] = 344;
	KeyPositionY[279] = 98;
	isSpecialKey[279] = 0;
	KeyPositionX[280] = 403;
	KeyPositionY[280] = 93;
	isSpecialKey[280] = 0;
	KeyPositionX[281] = 412;
	KeyPositionY[281] = 169;
	isSpecialKey[281] = 0;
	KeyPositionX[282] = 335;
	KeyPositionY[282] = 155;
	isSpecialKey[282] = 0;
	KeyPositionX[283] = 279;
	KeyPositionY[283] = 125;
	isSpecialKey[283] = 0;
	KeyPositionX[284] = 180;
	KeyPositionY[284] = 94;
	isSpecialKey[284] = 0;
	KeyPositionX[285] = 255;
	KeyPositionY[285] = 214;
	isSpecialKey[285] = 0;
	KeyPositionX[286] = 127;
	KeyPositionY[286] = 204;
	isSpecialKey[286] = 0;
	KeyPositionX[287] = 353;
	KeyPositionY[287] = 192;
	isSpecialKey[287] = 0;
	KeyPositionX[288] = 292;
	KeyPositionY[288] = 136;
	isSpecialKey[288] = 0;
	KeyPositionX[289] = 154;
	KeyPositionY[289] = 79;
	isSpecialKey[289] = 1;
	KeyPositionX[290] = 129;
	KeyPositionY[290] = 181;
	isSpecialKey[290] = 0;
	KeyPositionX[291] = 229;
	KeyPositionY[291] = 167;
	isSpecialKey[291] = 0;
	KeyPositionX[292] = 369;
	KeyPositionY[292] = 181;
	isSpecialKey[292] = 0;
	KeyPositionX[293] = 350;
	KeyPositionY[293] = 89;
	isSpecialKey[293] = 0;
	KeyPositionX[294] = 322;
	KeyPositionY[294] = 40;
	isSpecialKey[294] = 0;
	KeyPositionX[295] = 254;
	KeyPositionY[295] = 114;
	isSpecialKey[295] = 0;
	KeyPositionX[296] = 266;
	KeyPositionY[296] = 211;
	isSpecialKey[296] = 0;
	KeyPositionX[297] = 238;
	KeyPositionY[297] = 281;
	isSpecialKey[297] = 0;
	KeyPositionX[298] = 114;
	KeyPositionY[298] = 259;
	isSpecialKey[298] = 0;
	KeyPositionX[299] = 137;
	KeyPositionY[299] = 207;
	isSpecialKey[299] = 0;
	KeyPositionX[300] = 111;
	KeyPositionY[300] = 82;
	isSpecialKey[300] = 0;
	KeyPositionX[301] = 165;
	KeyPositionY[301] = 80;
	isSpecialKey[301] = 0;
	KeyPositionX[302] = 221;
	KeyPositionY[302] = 127;
	isSpecialKey[302] = 0;
	KeyPositionX[303] = 269;
	KeyPositionY[303] = 136;
	isSpecialKey[303] = 0;
	KeyPositionX[304] = 313;
	KeyPositionY[304] = 129;
	isSpecialKey[304] = 0;
	KeyPositionX[305] = 380;
	KeyPositionY[305] = 86;
	isSpecialKey[305] = 0;
	KeyPositionX[306] = 428;
	KeyPositionY[306] = 86;
	isSpecialKey[306] = 0;
	KeyPositionX[307] = 421;
	KeyPositionY[307] = 150;
	isSpecialKey[307] = 0;
	KeyPositionX[308] = 272;
	KeyPositionY[308] = 179;
	isSpecialKey[308] = 0;
	KeyPositionX[309] = 113;
	KeyPositionY[309] = 186;
	isSpecialKey[309] = 0;
	KeyPositionX[310] = 43;
	KeyPositionY[310] = 157;
	isSpecialKey[310] = 0;
	KeyPositionX[311] = 50;
	KeyPositionY[311] = 221;
	isSpecialKey[311] = 0;
	KeyPositionX[312] = 131;
	KeyPositionY[312] = 222;
	isSpecialKey[312] = 0;
	KeyPositionX[313] = 253;
	KeyPositionY[313] = 212;
	isSpecialKey[313] = 0;
	KeyPositionX[314] = 377;
	KeyPositionY[314] = 227;
	isSpecialKey[314] = 0;
	KeyPositionX[315] = 446;
	KeyPositionY[315] = 231;
	isSpecialKey[315] = 0;
	KeyPositionX[316] = 446;
	KeyPositionY[316] = 125;
	isSpecialKey[316] = 1;
	KeyPositionX[317] = 235;
	KeyPositionY[317] = 49;
	isSpecialKey[317] = 0;
	KeyPositionX[318] = 108;
	KeyPositionY[318] = 89;
	isSpecialKey[318] = 0;
	KeyPositionX[319] = 63;
	KeyPositionY[319] = 152;
	isSpecialKey[319] = 0;
	KeyPositionX[320] = 74;
	KeyPositionY[320] = 229;
	isSpecialKey[320] = 0;
	KeyPositionX[321] = 172;
	KeyPositionY[321] = 294;
	isSpecialKey[321] = 0;
	KeyPositionX[322] = 271;
	KeyPositionY[322] = 300;
	isSpecialKey[322] = 0;
	KeyPositionX[323] = 401;
	KeyPositionY[323] = 279;
	isSpecialKey[323] = 0;
	KeyPositionX[324] = 449;
	KeyPositionY[324] = 191;
	isSpecialKey[324] = 0;
	KeyPositionX[325] = 443;
	KeyPositionY[325] = 118;
	isSpecialKey[325] = 0;
	KeyPositionX[326] = 361;
	KeyPositionY[326] = 83;
	isSpecialKey[326] = 0;
	KeyPositionX[327] = 253;
	KeyPositionY[327] = 45;
	isSpecialKey[327] = 0;
	KeyPositionX[328] = 253;
	KeyPositionY[328] = 102;
	isSpecialKey[328] = 0;
	KeyPositionX[329] = 253;
	KeyPositionY[329] = 201;
	isSpecialKey[329] = 0;
	KeyPositionX[330] = 250;
	KeyPositionY[330] = 295;
	isSpecialKey[330] = 0;
	KeyPositionX[331] = 72;
	KeyPositionY[331] = 178;
	isSpecialKey[331] = 0;
	KeyPositionX[332] = 201;
	KeyPositionY[332] = 187;
	isSpecialKey[332] = 0;
	KeyPositionX[333] = 315;
	KeyPositionY[333] = 176;
	isSpecialKey[333] = 0;
	KeyPositionX[334] = 414;
	KeyPositionY[334] = 184;
	isSpecialKey[334] = 1;
	KeyPositionX[335] = 249;
	KeyPositionY[335] = 57;
	isSpecialKey[335] = 0;
	KeyPositionX[336] = 188;
	KeyPositionY[336] = 110;
	isSpecialKey[336] = 0;
	KeyPositionX[337] = 103;
	KeyPositionY[337] = 169;
	isSpecialKey[337] = 0;
	KeyPositionX[338] = 158;
	KeyPositionY[338] = 254;
	isSpecialKey[338] = 0;
	KeyPositionX[339] = 218;
	KeyPositionY[339] = 281;
	isSpecialKey[339] = 0;
	KeyPositionX[340] = 276;
	KeyPositionY[340] = 294;
	isSpecialKey[340] = 0;
	KeyPositionX[341] = 333;
	KeyPositionY[341] = 269;
	isSpecialKey[341] = 0;
	KeyPositionX[342] = 396;
	KeyPositionY[342] = 227;
	isSpecialKey[342] = 0;
	KeyPositionX[343] = 424;
	KeyPositionY[343] = 167;
	isSpecialKey[343] = 0;
	KeyPositionX[344] = 397;
	KeyPositionY[344] = 110;
	isSpecialKey[344] = 0;
	KeyPositionX[345] = 325;
	KeyPositionY[345] = 67;
	isSpecialKey[345] = 0;
	KeyPositionX[346] = 264;
	KeyPositionY[346] = 39;
	isSpecialKey[346] = 0;
	KeyPositionX[347] = 212;
	KeyPositionY[347] = 144;
	isSpecialKey[347] = 0;
	KeyPositionX[348] = 322;
	KeyPositionY[348] = 143;
	isSpecialKey[348] = 0;
	KeyPositionX[349] = 214;
	KeyPositionY[349] = 185;
	isSpecialKey[349] = 1;
	KeyPositionX[350] = 299;
	KeyPositionY[350] = 179;
	isSpecialKey[350] = 0;
	KeyPositionX[351] = 193;
	KeyPositionY[351] = 237;
	isSpecialKey[351] = 0;
	KeyPositionX[352] = 336;
	KeyPositionY[352] = 243;
	isSpecialKey[352] = 0;
	KeyPositionX[353] = 258;
	KeyPositionY[353] = 84;
	isSpecialKey[353] = 0;
	KeyPositionX[354] = 260;
	KeyPositionY[354] = 182;
	isSpecialKey[354] = 0;
	KeyPositionX[355] = 299;
	KeyPositionY[355] = 87;
	isSpecialKey[355] = 0;
	KeyPositionX[356] = 311;
	KeyPositionY[356] = 181;
	isSpecialKey[356] = 0;
	KeyPositionX[357] = 114;
	KeyPositionY[357] = 83;
	isSpecialKey[357] = 0;
	KeyPositionX[358] = 125;
	KeyPositionY[358] = 135;
	isSpecialKey[358] = 0;
	KeyPositionX[359] = 111;
	KeyPositionY[359] = 181;
	isSpecialKey[359] = 0;
	KeyPositionX[360] = 111;
	KeyPositionY[360] = 235;
	isSpecialKey[360] = 0;
	KeyPositionX[361] = 172;
	KeyPositionY[361] = 59;
	isSpecialKey[361] = 0;
	KeyPositionX[362] = 169;
	KeyPositionY[362] = 148;
	isSpecialKey[362] = 0;
	KeyPositionX[363] = 167;
	KeyPositionY[363] = 202;
	isSpecialKey[363] = 0;
	KeyPositionX[364] = 165;
	KeyPositionY[364] = 238;
	isSpecialKey[364] = 0;
	KeyPositionX[365] = 222;
	KeyPositionY[365] = 69;
	isSpecialKey[365] = 0;
	KeyPositionX[366] = 228;
	KeyPositionY[366] = 130;
	isSpecialKey[366] = 0;
	KeyPositionX[367] = 239;
	KeyPositionY[367] = 191;
	isSpecialKey[367] = 0;
	KeyPositionX[368] = 239;
	KeyPositionY[368] = 227;
	isSpecialKey[368] = 0;
	KeyPositionX[369] = 326;
	KeyPositionY[369] = 73;
	isSpecialKey[369] = 0;
	KeyPositionX[370] = 338;
	KeyPositionY[370] = 171;
	isSpecialKey[370] = 0;
	KeyPositionX[371] = 340;
	KeyPositionY[371] = 206;
	isSpecialKey[371] = 0;
	KeyPositionX[372] = 413;
	KeyPositionY[372] = 74;
	isSpecialKey[372] = 0;
	KeyPositionX[373] = 414;
	KeyPositionY[373] = 122;
	isSpecialKey[373] = 0;
	KeyPositionX[374] = 415;
	KeyPositionY[374] = 170;
	isSpecialKey[374] = 0;
	KeyPositionX[375] = 190;
	KeyPositionY[375] = 136;
	isSpecialKey[375] = 0;
	KeyPositionX[376] = 247;
	KeyPositionY[376] = 121;
	isSpecialKey[376] = 0;
	KeyPositionX[377] = 343;
	KeyPositionY[377] = 79;
	isSpecialKey[377] = 0;
	KeyPositionX[378] = 216;
	KeyPositionY[378] = 177;
	isSpecialKey[378] = 0;
	KeyPositionX[379] = 264;
	KeyPositionY[379] = 166;
	isSpecialKey[379] = 0;
	KeyPositionX[380] = 346;
	KeyPositionY[380] = 137;
	isSpecialKey[380] = 0;
	KeyPositionX[381] = 210;
	KeyPositionY[381] = 252;
	isSpecialKey[381] = 0;
	KeyPositionX[382] = 277;
	KeyPositionY[382] = 224;
	isSpecialKey[382] = 0;
	KeyPositionX[383] = 341;
	KeyPositionY[383] = 200;
	isSpecialKey[383] = 0;
	KeyPositionX[384] = 168;
	KeyPositionY[384] = 177;
	isSpecialKey[384] = 0;
	KeyPositionX[385] = 219;
	KeyPositionY[385] = 186;
	isSpecialKey[385] = 0;
	KeyPositionX[386] = 250;
	KeyPositionY[386] = 183;
	isSpecialKey[386] = 0;
	KeyPositionX[387] = 312;
	KeyPositionY[387] = 183;
	isSpecialKey[387] = 0;
	KeyPositionX[388] = 346;
	KeyPositionY[388] = 185;
	isSpecialKey[388] = 0;
	KeyPositionX[389] = 399;
	KeyPositionY[389] = 182;
	isSpecialKey[389] = 0;
	KeyPositionX[390] = 124;
	KeyPositionY[390] = 76;
	isSpecialKey[390] = 0;
	KeyPositionX[391] = 168;
	KeyPositionY[391] = 80;
	isSpecialKey[391] = 0;
	KeyPositionX[392] = 208;
	KeyPositionY[392] = 87;
	isSpecialKey[392] = 0;
	KeyPositionX[393] = 124;
	KeyPositionY[393] = 138;
	isSpecialKey[393] = 0;
	KeyPositionX[394] = 166;
	KeyPositionY[394] = 138;
	isSpecialKey[394] = 0;
	KeyPositionX[395] = 209;
	KeyPositionY[395] = 141;
	isSpecialKey[395] = 0;
	KeyPositionX[396] = 247;
	KeyPositionY[396] = 144;
	isSpecialKey[396] = 0;
	KeyPositionX[397] = 308;
	KeyPositionY[397] = 140;
	isSpecialKey[397] = 0;
	KeyPositionX[398] = 360;
	KeyPositionY[398] = 140;
	isSpecialKey[398] = 0;
	KeyPositionX[399] = 220;
	KeyPositionY[399] = 182;
	isSpecialKey[399] = 0;
	KeyPositionX[400] = 263;
	KeyPositionY[400] = 182;
	isSpecialKey[400] = 0;
	KeyPositionX[401] = 302;
	KeyPositionY[401] = 187;
	isSpecialKey[401] = 0;
	KeyPositionX[402] = 342;
	KeyPositionY[402] = 184;
	isSpecialKey[402] = 0;
	KeyPositionX[403] = 391;
	KeyPositionY[403] = 187;
	isSpecialKey[403] = 0;
	KeyPositionX[404] = 114;
	KeyPositionY[404] = 232;
	isSpecialKey[404] = 0;
	KeyPositionX[405] = 164;
	KeyPositionY[405] = 233;
	isSpecialKey[405] = 0;
	KeyPositionX[406] = 212;
	KeyPositionY[406] = 230;
	isSpecialKey[406] = 0;
	KeyPositionX[407] = 256;
	KeyPositionY[407] = 230;
	isSpecialKey[407] = 0;
	KeyPositionX[408] = 300;
	KeyPositionY[408] = 235;
	isSpecialKey[408] = 0;
	KeyPositionX[409] = 368;
	KeyPositionY[409] = 237;
	isSpecialKey[409] = 0;
	KeyPositionX[410] = 399;
	KeyPositionY[410] = 237;
	isSpecialKey[410] = 0;
	KeyPositionX[411] = 402;
	KeyPositionY[411] = 44;
	isSpecialKey[411] = 0;
	KeyPositionX[412] = 355;
	KeyPositionY[412] = 86;
	isSpecialKey[412] = 0;
	KeyPositionX[413] = 306;
	KeyPositionY[413] = 138;
	isSpecialKey[413] = 0;
	KeyPositionX[414] = 266;
	KeyPositionY[414] = 175;
	isSpecialKey[414] = 0;
	KeyPositionX[415] = 215;
	KeyPositionY[415] = 200;
	isSpecialKey[415] = 0;
	KeyPositionX[416] = 198;
	KeyPositionY[416] = 237;
	isSpecialKey[416] = 0;
	KeyPositionX[417] = 144;
	KeyPositionY[417] = 241;
	isSpecialKey[417] = 0;
	KeyPositionX[418] = 88;
	KeyPositionY[418] = 215;
	isSpecialKey[418] = 0;
	KeyPositionX[419] = 67;
	KeyPositionY[419] = 147;
	isSpecialKey[419] = 0;
	KeyPositionX[420] = 62;
	KeyPositionY[420] = 78;
	isSpecialKey[420] = 0;
	KeyPositionX[421] = 75;
	KeyPositionY[421] = 53;
	isSpecialKey[421] = 0;
	KeyPositionX[422] = 141;
	KeyPositionY[422] = 87;
	isSpecialKey[422] = 0;
	KeyPositionX[423] = 189;
	KeyPositionY[423] = 126;
	isSpecialKey[423] = 0;
	KeyPositionX[424] = 228;
	KeyPositionY[424] = 171;
	isSpecialKey[424] = 0;
	KeyPositionX[425] = 295;
	KeyPositionY[425] = 222;
	isSpecialKey[425] = 0;
	KeyPositionX[426] = 367;
	KeyPositionY[426] = 245;
	isSpecialKey[426] = 0;
	KeyPositionX[427] = 409;
	KeyPositionY[427] = 205;
	isSpecialKey[427] = 0;
	KeyPositionX[428] = 418;
	KeyPositionY[428] = 157;
	isSpecialKey[428] = 0;
	KeyPositionX[429] = 412;
	KeyPositionY[429] = 98;
	isSpecialKey[429] = 0;
	KeyPositionX[430] = 387;
	KeyPositionY[430] = 54;
	isSpecialKey[430] = 0;
	KeyPositionX[431] = 321;
	KeyPositionY[431] = 72;
	isSpecialKey[431] = 0;
	KeyPositionX[432] = 215;
	KeyPositionY[432] = 76;
	isSpecialKey[432] = 0;
	KeyPositionX[433] = 263;
	KeyPositionY[433] = 88;
	isSpecialKey[433] = 0;
	KeyPositionX[434] = 217;
	KeyPositionY[434] = 134;
	isSpecialKey[434] = 0;
	KeyPositionX[435] = 268;
	KeyPositionY[435] = 136;
	isSpecialKey[435] = 0;
	KeyPositionX[436] = 217;
	KeyPositionY[436] = 177;
	isSpecialKey[436] = 0;
	KeyPositionX[437] = 255;
	KeyPositionY[437] = 173;
	isSpecialKey[437] = 0;
	KeyPositionX[438] = 210;
	KeyPositionY[438] = 236;
	isSpecialKey[438] = 0;
	KeyPositionX[439] = 268;
	KeyPositionY[439] = 237;
	isSpecialKey[439] = 0;
	KeyPositionX[440] = 215;
	KeyPositionY[440] = 281;
	isSpecialKey[440] = 0;
	KeyPositionX[441] = 266;
	KeyPositionY[441] = 281;
	isSpecialKey[441] = 0;
	KeyPositionX[442] = 311;
	KeyPositionY[442] = 45;
	isSpecialKey[442] = 0;
	KeyPositionX[443] = 305;
	KeyPositionY[443] = 97;
	isSpecialKey[443] = 0;
	KeyPositionX[444] = 303;
	KeyPositionY[444] = 136;
	isSpecialKey[444] = 0;
	KeyPositionX[445] = 307;
	KeyPositionY[445] = 190;
	isSpecialKey[445] = 0;
	KeyPositionX[446] = 167;
	KeyPositionY[446] = 183;
	isSpecialKey[446] = 0;
	KeyPositionX[447] = 158;
	KeyPositionY[447] = 135;
	isSpecialKey[447] = 0;
	KeyPositionX[448] = 161;
	KeyPositionY[448] = 83;
	isSpecialKey[448] = 0;
	KeyPositionX[449] = 159;
	KeyPositionY[449] = 46;
	isSpecialKey[449] = 0;
	KeyPositionX[450] = 210;
	KeyPositionY[450] = 87;
	isSpecialKey[450] = 0;
	specialKeyMoveToCCP[0] =ccp(66,44);
	specialKeyMoveToCCP[1] =ccp(69,136);
	specialKeyMoveToCCP[2] =ccp(168,144);
	specialKeyMoveToCCP[3] =ccp(257,135);
	specialKeyMoveToCCP[4] =ccp(322,132);
	specialKeyMoveToCCP[5] =ccp(411,132);
	specialKeyMoveToCCP[6] =ccp(411,191);
	specialKeyMoveToCCP[7] =ccp(66,44);
	specialKeyMoveToCCP[8] =ccp(69,136);
	specialKeyMoveToCCP[9] =ccp(168,144);
	specialKeyMoveToCCP[10] =ccp(257,135);
	specialKeyMoveToCCP[11] =ccp(322,132);
	specialKeyMoveToCCP[12] =ccp(411,132);
	specialKeyMoveToCCP[13] =ccp(411,191);
	specialKeyMoveToCCP[14] =ccp(66,44);
	specialKeyMoveToCCP[15] =ccp(69,136);
	specialKeyMoveToCCP[16] =ccp(168,144);
	specialKeyMoveToCCP[17] =ccp(257,135);
	specialKeyMoveToCCP[18] =ccp(322,132);
	specialKeyMoveToCCP[19] =ccp(411,132);
	specialKeyMoveToCCP[20] =ccp(411,191);
	specialKeyMoveToCCP[21] =ccp(66,44);
	specialKeyMoveToCCP[22] =ccp(69,136);
	specialKeyMoveToCCP[23] =ccp(168,144);
	specialKeyMoveToCCP[24] =ccp(257,135);
	specialKeyMoveToCCP[25] =ccp(322,132);
	specialKeyMoveToCCP[26] =ccp(411,132);
	specialKeyMoveToCCP[27] =ccp(411,191);
}